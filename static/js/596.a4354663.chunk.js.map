{"version":3,"file":"static/js/596.a4354663.chunk.js","mappings":"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","sources":["pages/PhonebookPage/styled.js","components/Filter/styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","redux/filter/selectors.js","components/Filter/index.jsx","components/ContactList/styled.js","components/ContactList/index.jsx","Forms/FormContact/styled.js","Forms/FormContact/index.jsx","pages/PhonebookPage/index.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport 'modern-normalize'\n\nexport const ContPageBox = styled('div')(() => {\n  return {\n    marginTop: 90,\n    marginBottom: 40,\n    '& h1': {\n      textAlign: 'center',\n    },\n    '& h2': {\n      textAlign: 'center',\n    },\n  };\n});\n","import { styled } from 'styled-components';\n\nexport const FilterCont = styled('div')(() => {\n  return {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'flex',\n    flexDirection: 'column',\n    '& label': {\n      marginBottom: 5,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n    '& input': {\n      width: 300,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n    '& input::placeholder': {\n      opacity: 0.5,\n    },\n  };\n});\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const selectorContacts = state => state.contacts;","import { createSelector } from '@reduxjs/toolkit';\nimport { selectorContacts } from 'redux/contacts/selectors';\n\nexport const selectorFilter = state => state.filter;\n\nexport const selectorFilteredContacts = createSelector(\n  selectorContacts,\n  selectorFilter,\n  (contacts, filter) =>\n    contacts\n      ? contacts.items.filter(contact =>\n          contact.name.toLowerCase().includes(filter.filter.toLowerCase())\n        )\n      : contacts.items\n);\n","import React from 'react';\nimport { FilterCont } from './styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/slice';\nimport { selectorFilter } from 'redux/filter/selectors';\n\nconst Filter = () => {\n  const { filter } = useSelector(selectorFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n  return (\n    <FilterCont>\n      <label>Find contacts by name</label>\n      <input\n        className=\"form-control border-success-subtle border-2\"\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[^\\d]+$\"\n        placeholder=\"Albert Einstein\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </FilterCont>\n  );\n};\n\nexport default Filter;\n","import { styled } from 'styled-components';\n\nexport const List = styled('ul')(() => {\n  return {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    width: 450,\n    '& li': {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginTop: 5,\n      marginBottom: 5,\n      '& button': {\n        fontWeight: 500,\n        fontSize: 14,\n        lineHeight: 1.5,\n        letterSpacing: '0.02em',\n        color: '#2E2F42',\n        border: '1px solid #ff2f00',\n        backgroundColor: '#ff9e88',\n        borderRadius: '5px',\n        boxShadow:\n          'rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px',\n        '&:hover': {\n          color: '#FFFFFF',\n          backgroundColor: '#FF5733',\n          transition: 'color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n        },\n      },\n    },\n  };\n});\n","import React from 'react';\nimport { List } from './styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectorFilteredContacts } from 'redux/filter/selectors';\nimport { getAllContacts, removeContact } from 'redux/contacts/thunks';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectorFilteredContacts);\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(removeContact(id)).then(() => {\n      dispatch(getAllContacts());\n    });\n  };\n\n  return (\n    <List>\n      {filteredContacts.map(el => (\n        <li key={el.id}>\n          {el.name}: {el.number}\n          <button type=\"button\" onClick={() => handleDelete(el.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </List>\n  );\n};\nexport default ContactList;","import { styled } from 'styled-components';\n\nexport const Form = styled('form')(() => {\n  return {\n    marginTop: 20,\n    marginBottom: 20,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: 400,\n    gap: 20,\n    '& div': {\n      display: 'flex',\n      flexDirection: 'column',\n      '& label': {\n        marginBottom: 5,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n      '& input': {\n        width: 300,\n      },\n      '& input::placeholder': {\n        opacity: 0.5,\n      },\n    },\n    '& button': {\n      fontWeight: 700,\n      fontSize: 20,\n      lineHeight: 1.5,\n      letterSpacing: '0.02em',\n      color: '#2E2F42',\n      border: '1px solid #4d6dfa',\n      backgroundColor: '#99acff',\n      borderRadius: '5px',\n      padding: '5px 15px',\n      boxShadow:\n        'rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px',\n      '&:hover': {\n        color: '#FFFFFF',\n        backgroundColor: '#2f28ff',\n        transition: 'color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n      },\n    },\n  };\n});","import { useState } from \"react\";\nimport { Form } from \"./styled\";\nimport { selectorContacts } from \"redux/contacts/selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addNewContact } from \"redux/contacts/thunks\";\n\nconst FormContact = () => {\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { items } = useSelector(selectorContacts);\n  const dispatch = useDispatch();\n\n    const handleChange = ({ target: { value, name } }) => {\n      switch (name) {\n        case 'name':\n          setName(value);\n          break;\n\n        case 'number':\n          setNumber(value);\n          break;\n\n        default:\n          console.warn(`Name '${name}' does not exist`);\n      }\n      // if(name === 'name') setName(value);\n      // else setNumber(value);\n    };\n\n    const handleSubmit = evt => {\n      evt.preventDefault();\n      const isAlreadyExist = items.find(\n        el => el.name.toLowerCase() === name.toLowerCase()\n      );\n      if (isAlreadyExist) {\n        alert(`${name} is already in contacts`);\n      } else {\n        dispatch(addNewContact({ name, number }));\n      }\n      setName('');\n      setNumber('');\n    };\n\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      className=\"border border-primary-subtle border-3 rounded rounded-4 bg-primary-subtle\"\n    >\n      <div>\n        <label className=\"fs-4 mt-2\">Name</label>\n        <input\n          className=\"form-control border-success-subtle border-2\"\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[^\\d]+$\"\n          placeholder=\"Albert Einstein\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </div>\n      <div>\n        <label className=\"fs-4\">Numder</label>\n        <input\n          className=\"form-control border-success-subtle border-2\"\n          autoComplete=\"off\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"^(\\+?[0-9 \\(\\)\\-\\.х]+)$\"\n          placeholder=\"+38(097)862-31-45\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </div>\n      <button type=\"submit\" className=\"mb-3\">\n        Add contact\n      </button>\n    </Form>\n  );\n};\n\nexport default FormContact;\n","import { ContPageBox } from \"./styled\";\nimport Filter from \"components/Filter\";\nimport ContactList from \"components/ContactList\";\nimport FormContact from \"Forms/FormContact\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getAllContacts } from \"redux/contacts/thunks\";\n\nconst Phonebook = () => {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllContacts());\n  }, [dispatch]);\n\n  return (\n    <ContPageBox>\n      <h1>Phonebook</h1>\n      <FormContact />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </ContPageBox>\n  );\n}\n\nexport default Phonebook"],"names":["ContPageBox","styled","marginTop","marginBottom","textAlign","FilterCont","display","flexDirection","marginLeft","marginRight","width","opacity","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectorContacts","state","contacts","selectorFilter","filter","selectorFilteredContacts","items","contact","toLowerCase","includes","useSelector","dispatch","useDispatch","_jsxs","children","_jsx","className","type","pattern","placeholder","title","required","onChange","_ref","target","setFilter","List","justifyContent","fontWeight","fontSize","lineHeight","letterSpacing","color","border","backgroundColor","borderRadius","boxShadow","transition","filteredContacts","el","number","onClick","id","removeContact","then","getAllContacts","Form","alignItems","gap","padding","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleChange","_ref$target","console","warn","onSubmit","evt","preventDefault","alert","addNewContact","autoComplete","useEffect","FormContact","Filter","ContactList"],"sourceRoot":""}