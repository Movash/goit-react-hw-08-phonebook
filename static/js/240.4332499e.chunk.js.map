{"version":3,"file":"static/js/240.4332499e.chunk.js","mappings":"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","sources":["Forms/FormContact/styled.js","redux/contacts/selectors.js","Forms/FormContact/index.jsx","components/Contact/index.jsx","pages/PhonebookPage/styled.js","components/Filter/styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/selectors.js","components/Filter/index.jsx","components/ContactList/styled.js","components/ContactList/index.jsx","pages/PhonebookPage/index.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const Form = styled('form')(() => {\n  return {\n    marginTop: 20,\n    marginBottom: 20,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: 350,\n    border: '2px solid #000',\n    gap: 20,\n    '& div': {\n      display: 'flex',\n      flexDirection: 'column',\n      '& label': {\n        marginBottom: 5,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n      '& input': {\n        width: 200,\n      },\n    },\n    '& button': {\n      marginBottom: 20,\n      fontWeight: 700,\n      fontSize: 20,\n      lineHeight: 1.5,\n      letterSpacing: '0.02em',\n      color: '#2E2F42',\n      border: '1px solid #4d6dfa',\n      backgroundColor: '#99acff',\n      borderRadius: '5px',\n      padding: '5px 15px',\n      boxShadow:\n        'rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px',\n      '&:hover': {\n        color: '#FFFFFF',\n        backgroundColor: '#2f28ff',\n        transition: 'color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n      },\n    },\n  };\n});\n","export const selectorContacts = state => state.contacts;","import { useState } from \"react\";\nimport { Form } from \"./styled\";\nimport { selectorContacts } from \"redux/contacts/selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addNewContact } from \"redux/contacts/thunks\";\n\nconst FormContact = () => {\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { items } = useSelector(selectorContacts);\n  const dispatch = useDispatch();\n\n    const handleChange = ({ target: { value, name } }) => {\n      switch (name) {\n        case 'name':\n          setName(value);\n          break;\n\n        case 'number':\n          setNumber(value);\n          break;\n\n        default:\n          console.warn(`Name '${name}' does not exist`);\n      }\n      // if(name === 'name') setName(value);\n      // else setNumber(value);\n    };\n\n    const handleSubmit = evt => {\n      evt.preventDefault();\n      const isAlreadyExist = items.find(\n        el => el.name.toLowerCase() === name.toLowerCase()\n      );\n      if (isAlreadyExist) {\n        alert(`${name} is already in contacts`);\n      } else {\n        dispatch(addNewContact({ name, number }));\n      }\n      setName('');\n      setNumber('');\n    };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n        <label>Name</label>\n        <input\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[^\\d]+$\"\n          placeholder=\"Albert Einstein\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </div>\n      <div>\n        <label>Numder</label>\n        <input\n          autoComplete=\"off\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"^(\\+?[0-9 \\(\\)\\-\\.х]+)$\"\n          placeholder=\"+38(097)862-31-45\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </div>\n      <button type=\"submit\">Add contact</button>\n    </Form>\n  );\n};\n\nexport default FormContact;\n","import { useEffect, useState } from 'react';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getAllContacts } from 'redux/contacts/thunks';\nimport FormContact from 'Forms/FormContact';\n\nconst Contact = () => {\n  \n  const [alreadyLoaded, setAlreadyLoaded] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!alreadyLoaded) {\n      dispatch(getAllContacts());\n      console.log('useEffect')\n      setAlreadyLoaded(true);\n    }\n  }, [alreadyLoaded, dispatch]);\n\n  return (\n    <FormContact />\n  );\n};\n\nexport default Contact;\n","import { styled } from 'styled-components';\nimport 'modern-normalize'\n\nexport const ContPageBox = styled('div')(() => {\n  return {\n    marginTop: 20,\n    '& h1': {\n      textAlign: 'center',\n    },\n    '& h2': {\n      textAlign: 'center',\n    },\n  };\n});\n","import { styled } from 'styled-components';\n\nexport const FilterCont = styled('div')(() => {\n  return {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'flex',\n    flexDirection: 'column',\n    '& label': {\n      marginBottom: 5,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n    '& input': {\n      width: 200,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  };\n});\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\nimport { selectorContacts } from 'redux/contacts/selectors';\n\nexport const selectorFilter = state => state.filter;\n\nexport const selectorFilteredContacts = createSelector(\n  selectorContacts,\n  selectorFilter,\n  (contacts, filter) =>\n    contacts\n      ? contacts.items.filter(contact =>\n          contact.name.toLowerCase().includes(filter.filter.toLowerCase())\n        )\n      : contacts.items\n);\n","import React from 'react';\nimport { FilterCont } from './styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/slice';\nimport { selectorFilter } from 'redux/filter/selectors';\n\nconst Filter = () => {\n  const { filter } = useSelector(selectorFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n  return (\n    <FilterCont>\n      <label>Find contacts by name</label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[^\\d]+$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </FilterCont>\n  );\n};\n\nexport default Filter;\n","import { styled } from 'styled-components';\n\nexport const List = styled('ul')(() => {\n  return {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    width: 450,\n    '& li': {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginTop: 5,\n      marginBottom: 5,\n      '& button': {\n        fontWeight: 500,\n        fontSize: 14,\n        lineHeight: 1.5,\n        letterSpacing: '0.02em',\n        color: '#2E2F42',\n        border: '1px solid #ff2f00',\n        backgroundColor: '#ff9e88',\n        borderRadius: '5px',\n        boxShadow:\n          'rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px',\n        '&:hover': {\n          color: '#FFFFFF',\n          backgroundColor: '#FF5733',\n          transition: 'color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n        },\n      },\n    },\n  };\n});\n","import React from 'react';\nimport { List } from './styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectorFilteredContacts } from 'redux/filter/selectors';\nimport { getAllContacts, removeContact } from 'redux/contacts/thunks';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectorFilteredContacts);\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(removeContact(id)).then(() => {\n      dispatch(getAllContacts());\n    });\n  };\n\n  return (\n    <List>\n      {filteredContacts.map(el => (\n        <li key={el.id}>\n          {el.name}: {el.number}\n          <button type=\"button\" onClick={() => handleDelete(el.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </List>\n  );\n};\nexport default ContactList;\n","import Contact from \"components/Contact\";\nimport { ContPageBox } from \"./styled\";\nimport Filter from \"components/Filter\";\n// import Loader from \"components/Loader\";\n// import Error from \"components/Error\";\nimport ContactList from \"components/ContactList\";\n\nconst Phonebook = () => {\n  return (\n    <ContPageBox>\n      <h1>Phonebook</h1>\n      <Contact />\n      <h2>Contacts</h2>\n      <Filter />\n      {/* <Error />\n      <Loader /> */}\n      <ContactList />\n    </ContPageBox>\n  );\n}\n\nexport default Phonebook"],"names":["Form","styled","marginTop","marginBottom","marginLeft","marginRight","display","flexDirection","alignItems","width","border","gap","fontWeight","fontSize","lineHeight","letterSpacing","color","backgroundColor","borderRadius","padding","boxShadow","transition","selectorContacts","state","contacts","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","items","useSelector","dispatch","useDispatch","handleChange","_ref","_ref$target","target","value","console","warn","concat","_jsxs","onSubmit","evt","preventDefault","find","el","toLowerCase","alert","addNewContact","children","_jsx","autoComplete","type","pattern","placeholder","title","required","onChange","alreadyLoaded","setAlreadyLoaded","useEffect","getAllContacts","log","FormContact","ContPageBox","textAlign","FilterCont","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectorFilter","filter","selectorFilteredContacts","contact","includes","setFilter","List","justifyContent","filteredContacts","onClick","id","removeContact","then","Contact","Filter","ContactList"],"sourceRoot":""}